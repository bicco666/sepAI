[33mcommit b935e277df7b4fd47d42623198ff834ee5f0a421[m
Author: bicco666 <bicco666@yahoo.de>
Date:   Tue Sep 16 21:35:50 2025 +0200

    aichanges

[1mdiff --git a/.venv/bin/Activate.ps1 b/.venv/bin/Activate.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..b49d77b[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/Activate.ps1[m
[36m@@ -0,0 +1,247 @@[m
[32m+[m[32m<#[m[41m[m
[32m+[m[32m.Synopsis[m[41m[m
[32m+[m[32mActivate a Python virtual environment for the current PowerShell session.[m[41m[m
[32m+[m[41m[m
[32m+[m[32m.Description[m[41m[m
[32m+[m[32mPushes the python executable for a virtual environment to the front of the[m[41m[m
[32m+[m[32m$Env:PATH environment variable and sets the prompt to signify that you are[m[41m[m
[32m+[m[32min a Python virtual environment. Makes use of the command line switches as[m[41m[m
[32m+[m[32mwell as the `pyvenv.cfg` file values present in the virtual environment.[m[41m[m
[32m+[m[41m[m
[32m+[m[32m.Parameter VenvDir[m[41m[m
[32m+[m[32mPath to the directory that contains the virtual environment to activate. The[m[41m[m
[32m+[m[32mdefault value for this is the parent of the directory that the Activate.ps1[m[41m[m
[32m+[m[32mscript is located within.[m[41m[m
[32m+[m[41m[m
[32m+[m[32m.Parameter Prompt[m[41m[m
[32m+[m[32mThe prompt prefix to display when this virtual environment is activated. By[m[41m[m
[32m+[m[32mdefault, this prompt is the name of the virtual environment folder (VenvDir)[m[41m[m
[32m+[m[32msurrounded by parentheses and followed by a single space (ie. '(.venv) ').[m[41m[m
[32m+[m[41m[m
[32m+[m[32m.Example[m[41m[m
[32m+[m[32mActivate.ps1[m[41m[m
[32m+[m[32mActivates the Python virtual environment that contains the Activate.ps1 script.[m[41m[m
[32m+[m[41m[m
[32m+[m[32m.Example[m[41m[m
[32m+[m[32mActivate.ps1 -Verbose[m[41m[m
[32m+[m[32mActivates the Python virtual environment that contains the Activate.ps1 script,[m[41m[m
[32m+[m[32mand shows extra information about the activation as it executes.[m[41m[m
[32m+[m[41m[m
[32m+[m[32m.Example[m[41m[m
[32m+[m[32mActivate.ps1 -VenvDir C:\Users\MyUser\Common\.venv[m[41m[m
[32m+[m[32mActivates the Python virtual environment located in the specified location.[m[41m[m
[32m+[m[41m[m
[32m+[m[32m.Example[m[41m[m
[32m+[m[32mActivate.ps1 -Prompt "MyPython"[m[41m[m
[32m+[m[32mActivates the Python virtual environment that contains the Activate.ps1 script,[m[41m[m
[32m+[m[32mand prefixes the current prompt with the specified string (surrounded in[m[41m[m
[32m+[m[32mparentheses) while the virtual environment is active.[m[41m[m
[32m+[m[41m[m
[32m+[m[32m.Notes[m[41m[m
[32m+[m[32mOn Windows, it may be required to enable this Activate.ps1 script by setting the[m[41m[m
[32m+[m[32mexecution policy for the user. You can do this by issuing the following PowerShell[m[41m[m
[32m+[m[32mcommand:[m[41m[m
[32m+[m[41m[m
[32m+[m[32mPS C:\> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser[m[41m[m
[32m+[m[41m[m
[32m+[m[32mFor more information on Execution Policies:[m[41m [m
[32m+[m[32mhttps://go.microsoft.com/fwlink/?LinkID=135170[m[41m[m
[32m+[m[41m[m
[32m+[m[32m#>[m[41m[m
[32m+[m[32mParam([m[41m[m
[32m+[m[32m    [Parameter(Mandatory = $false)][m[41m[m
[32m+[m[32m    [String][m[41m[m
[32m+[m[32m    $VenvDir,[m[41m[m
[32m+[m[32m    [Parameter(Mandatory = $false)][m[41m[m
[32m+[m[32m    [String][m[41m[m
[32m+[m[32m    $Prompt[m[41m[m
[32m+[m[32m)[m[41m[m
[32m+[m[41m[m
[32m+[m[32m<# Function declarations --------------------------------------------------- #>[m[41m[m
[32m+[m[41m[m
[32m+[m[32m<#[m[41m[m
[32m+[m[32m.Synopsis[m[41m[m
[32m+[m[32mRemove all shell session elements added by the Activate script, including the[m[41m[m
[32m+[m[32maddition of the virtual environment's Python executable from the beginning of[m[41m[m
[32m+[m[32mthe PATH variable.[m[41m[m
[32m+[m[41m[m
[32m+[m[32m.Parameter NonDestructive[m[41m[m
[32m+[m[32mIf present, do not remove this function from the global namespace for the[m[41m[m
[32m+[m[32msession.[m[41m[m
[32m+[m[41m[m
[32m+[m[32m#>[m[41m[m
[32m+[m[32mfunction global:deactivate ([switch]$NonDestructive) {[m[41m[m
[32m+[m[32m    # Revert to original values[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    # The prior prompt:[m[41m[m
[32m+[m[32m    if (Test-Path -Path Function:_OLD_VIRTUAL_PROMPT) {[m[41m[m
[32m+[m[32m        Copy-Item -Path Function:_OLD_VIRTUAL_PROMPT -Destination Function:prompt[m[41m[m
[32m+[m[32m        Remove-Item -Path Function:_OLD_VIRTUAL_PROMPT[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    # The prior PYTHONHOME:[m[41m[m
[32m+[m[32m    if (Test-Path -Path Env:_OLD_VIRTUAL_PYTHONHOME) {[m[41m[m
[32m+[m[32m        Copy-Item -Path Env:_OLD_VIRTUAL_PYTHONHOME -Destination Env:PYTHONHOME[m[41m[m
[32m+[m[32m        Remove-Item -Path Env:_OLD_VIRTUAL_PYTHONHOME[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    # The prior PATH:[m[41m[m
[32m+[m[32m    if (Test-Path -Path Env:_OLD_VIRTUAL_PATH) {[m[41m[m
[32m+[m[32m        Copy-Item -Path Env:_OLD_VIRTUAL_PATH -Destination Env:PATH[m[41m[m
[32m+[m[32m        Remove-Item -Path Env:_OLD_VIRTUAL_PATH[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    # Just remove the VIRTUAL_ENV altogether:[m[41m[m
[32m+[m[32m    if (Test-Path -Path Env:VIRTUAL_ENV) {[m[41m[m
[32m+[m[32m        Remove-Item -Path env:VIRTUAL_ENV[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    # Just remove VIRTUAL_ENV_PROMPT altogether.[m[41m[m
[32m+[m[32m    if (Test-Path -Path Env:VIRTUAL_ENV_PROMPT) {[m[41m[m
[32m+[m[32m        Remove-Item -Path env:VIRTUAL_ENV_PROMPT[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    # Just remove the _PYTHON_VENV_PROMPT_PREFIX altogether:[m[41m[m
[32m+[m[32m    if (Get-Variable -Name "_PYTHON_VENV_PROMPT_PREFIX" -ErrorAction SilentlyContinue) {[m[41m[m
[32m+[m[32m        Remove-Variable -Name _PYTHON_VENV_PROMPT_PREFIX -Scope Global -Force[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    # Leave deactivate function in the global namespace if requested:[m[41m[m
[32m+[m[32m    if (-not $NonDestructive) {[m[41m[m
[32m+[m[32m        Remove-Item -Path function:deactivate[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m[32m<#[m[41m[m
[32m+[m[32m.Description[m[41m[m
[32m+[m[32mGet-PyVenvConfig parses the values from the pyvenv.cfg file located in the[m[41m[m
[32m+[m[32mgiven folder, and returns them in a map.[m[41m[m
[32m+[m[41m[m
[32m+[m[32mFor each line in the pyvenv.cfg file, if that line can be parsed into exactly[m[41m[m
[32m+[m[32mtwo strings separated by `=` (with any amount of whitespace surrounding the =)[m[41m[m
[32m+[m[32mthen it is considered a `key = value` line. The left hand string is the key,[m[41m[m
[32m+[m[32mthe right hand is the value.[m[41m[m
[32m+[m[41m[m
[32m+[m[32mIf the value starts with a `'` or a `"` then the first and last character is[m[41m[m
[32m+[m[32mstripped from the value before being captured.[m[41m[m
[32m+[m[41m[m
[32m+[m[32m.Parameter ConfigDir[m[41m[m
[32m+[m[32mPath to the directory that contains the `pyvenv.cfg` file.[m[41m[m
[32m+[m[32m#>[m[41m[m
[32m+[m[32mfunction Get-PyVenvConfig([m[41m[m
[32m+[m[32m    [String][m[41m[m
[32m+[m[32m    $ConfigDir[m[41m[m
[32m+[m[32m) {[m[41m[m
[32m+[m[32m    Write-Verbose "Given ConfigDir=$ConfigDir, obtain values in pyvenv.cfg"[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    # Ensure the file exists, and issue a warning if it doesn't (but still allow the function to continue).[m[41m[m
[32m+[m[32m    $pyvenvConfigPath = Join-Path -Resolve -Path $ConfigDir -ChildPath 'pyvenv.cfg' -ErrorAction Continue[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    # An empty map will be returned if no config file is found.[m[41m[m
[32m+[m[32m    $pyvenvConfig = @{ }[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    if ($pyvenvConfigPath) {[m[41m[m
[32m+[m[41m[m
[32m+[m[32m        Write-Verbose "File exists, parse `key = value` lines"[m[41m[m
[32m+[m[32m        $pyvenvConfigContent = Get-Content -Path $pyvenvConfigPath[m[41m[m
[32m+[m[41m[m
[32m+[m[32m        $pyvenvConfigContent | ForEach-Object {[m[41m[m
[32m+[m[32m            $keyval = $PSItem -split "\s*=\s*", 2[m[41m[m
[32m+[m[32m            if ($keyval[0] -and $keyval[1]) {[m[41m[m
[32m+[m[32m                $val = $keyval[1][m[41m[m
[32m+[m[41m[m
[32m+[m[32m                # Remove extraneous quotations around a string value.[m[41m[m
[32m+[m[32m                if ("'""".Contains($val.Substring(0, 1))) {[m[41m[m
[32m+[m[32m                    $val = $val.Substring(1, $val.Length - 2)[m[41m[m
[32m+[m[32m                }[m[41m[m
[32m+[m[41m[m
[32m+[m[32m                $pyvenvConfig[$keyval[0]] = $val[m[41m[m
[32m+[m[32m                Write-Verbose "Adding Key: '$($keyval[0])'='$val'"[m[41m[m
[32m+[m[32m            }[m[41m[m
[32m+[m[32m        }[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[32m    return $pyvenvConfig[m[41m[m
[32m+[m[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m[41m[m
[32m+[m[32m<# Begin Activate script --------------------------------------------------- #>[m[41m[m
[32m+[m[41m[m
[32m+[m[32m# Determine the containing directory of this script[m[41m[m
[32m+[m[32m$VenvExecPath = Split-Path -Parent $MyInvocation.MyCommand.Definition[m[41m[m
[32m+[m[32m$VenvExecDir = Get-Item -Path $VenvExecPath[m[41m[m
[32m+[m[41m[m
[32m+[m[32mWrite-Verbose "Activation script is located in path: '$VenvExecPath'"[m[41m[m
[32m+[m[32mWrite-Verbose "VenvExecDir Fullname: '$($VenvExecDir.FullName)"[m[41m[m
[32m+[m[32mWrite-Verbose "VenvExecDir Name: '$($VenvExecDir.Name)"[m[41m[m
[32m+[m[41m[m
[32m+[m[32m# Set values required in priority: CmdLine, ConfigFile, Default[m[41m[m
[32m+[m[32m# First, get the location of the virtual environment, it might not be[m[41m[m
[32m+[m[32m# VenvExecDir if specified on the command line.[m[41m[m
[32m+[m[32mif ($VenvDir) {[m[41m[m
[32m+[m[32m    Write-Verbose "VenvDir given as parameter, using '$VenvDir' to determine values"[m[41m[m
[32m+[m[32m}[m[41m[m
[32m+[m[32melse {[m[41m[m
[32m+[m[32m    Write-Verbose "VenvDir not given as a parameter, using parent directory name as VenvDir."[m[41m[m
[32m+[m[32m    $VenvDir = $VenvExecDir.Parent.FullName.TrimEnd("\\/")[m[41m[m
[32m+[m[32m    Write-Verbose "VenvDir=$VenvDir"[m[41m[m
[32m+[m[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m[32m# Next, read the `pyvenv.cfg` file to determine any required value such[m[41m[m
[32m+[m[32m# as `prompt`.[m[41m[m
[32m+[m[32m$pyvenvCfg = Get-PyVenvConfig -ConfigDir $VenvDir[m[41m[m
[32m+[m[41m[m
[32m+[m[32m# Next, set the prompt from the command line, or the config file, or[m[41m[m
[32m+[m[32m# just use the name of the virtual environment folder.[m[41m[m
[32m+[m[32mif ($Prompt) {[m[41m[m
[32m+[m[32m    Write-Verbose "Prompt specified as argument, using '$Prompt'"[m[41m[m
[32m+[m[32m}[m[41m[m
[32m+[m[32melse {[m[41m[m
[32m+[m[32m    Write-Verbose "Prompt not specified as argument to script, checking pyvenv.cfg value"[m[41m[m
[32m+[m[32m    if ($pyvenvCfg -and $pyvenvCfg['prompt']) {[m[41m[m
[32m+[m[32m        Write-Verbose "  Setting based on value in pyvenv.cfg='$($pyvenvCfg['prompt'])'"[m[41m[m
[32m+[m[32m        $Prompt = $pyvenvCfg['prompt'];[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[32m    else {[m[41m[m
[32m+[m[32m        Write-Verbose "  Setting prompt based on parent's directory's name. (Is the directory name passed to venv module when creating the virtual environment)"[m[41m[m
[32m+[m[32m        Write-Verbose "  Got leaf-name of $VenvDir='$(Split-Path -Path $venvDir -Leaf)'"[m[41m[m
[32m+[m[32m        $Prompt = Split-Path -Path $venvDir -Leaf[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m[32mWrite-Verbose "Prompt = '$Prompt'"[m[41m[m
[32m+[m[32mWrite-Verbose "VenvDir='$VenvDir'"[m[41m[m
[32m+[m[41m[m
[32m+[m[32m# Deactivate any currently active virtual environment, but leave the[m[41m[m
[32m+[m[32m# deactivate function in place.[m[41m[m
[32m+[m[32mdeactivate -nondestructive[m[41m[m
[32m+[m[41m[m
[32m+[m[32m# Now set the environment variable VIRTUAL_ENV, used by many tools to determine[m[41m[m
[32m+[m[32m# that there is an activated venv.[m[41m[m
[32m+[m[32m$env:VIRTUAL_ENV = $VenvDir[m[41m[m
[32m+[m[41m[m
[32m+[m[32mif (-not $Env:VIRTUAL_ENV_DISABLE_PROMPT) {[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    Write-Verbose "Setting prompt to '$Prompt'"[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    # Set the prompt to include the env name[m[41m[m
[32m+[m[32m    # Make sure _OLD_VIRTUAL_PROMPT is global[m[41m[m
[32m+[m[32m    function global:_OLD_VIRTUAL_PROMPT { "" }[m[41m[m
[32m+[m[32m    Copy-Item -Path function:prompt -Destination function:_OLD_VIRTUAL_PROMPT[m[41m[m
[32m+[m[32m    New-Variable -Name _PYTHON_VENV_PROMPT_PREFIX -Description "Python virtual environment prompt prefix" -Scope Global -Option ReadOnly -Visibility Public -Value $Prompt[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    function global:prompt {[m[41m[m
[32m+[m[32m        Write-Host -NoNewline -ForegroundColor Green "($_PYTHON_VENV_PROMPT_PREFIX) "[m[41m[m
[32m+[m[32m        _OLD_VIRTUAL_PROMPT[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[32m    $env:VIRTUAL_ENV_PROMPT = $Prompt[m[41m[m
[32m+[m[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m[32m# Clear PYTHONHOME[m[41m[m
[32m+[m[32mif (Test-Path -Path Env:PYTHONHOME) {[m[41m[m
[32m+[m[32m    Copy-Item -Path Env:PYTHONHOME -Destination Env:_OLD_VIRTUAL_PYTHONHOME[m[41m[m
[32m+[m[32m    Remove-Item -Path Env:PYTHONHOME[m[41m[m
[32m+[m[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m[32m# Add the venv to the PATH[m[41m[m
[32m+[m[32mCopy-Item -Path Env:PATH -Destination Env:_OLD_VIRTUAL_PATH[m[41m[m
[32m+[m[32m$Env:PATH = "$VenvExecDir$([System.IO.Path]::PathSeparator)$Env:PATH"[m[41m[m
[1mdiff --git a/.venv/bin/activate b/.venv/bin/activate[m
[1mnew file mode 100644[m
[1mindex 0000000..4d579fd[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/activate[m
[36m@@ -0,0 +1,70 @@[m
[32m+[m[32m# This file must be used with "source bin/activate" *from bash*[m
[32m+[m[32m# You cannot run it directly[m
[32m+[m
[32m+[m[32mdeactivate () {[m
[32m+[m[32m    # reset old environment variables[m
[32m+[m[32m    if [ -n "${_OLD_VIRTUAL_PATH:-}" ] ; then[m
[32m+[m[32m        PATH="${_OLD_VIRTUAL_PATH:-}"[m
[32m+[m[32m        export PATH[m
[32m+[m[32m        unset _OLD_VIRTUAL_PATH[m
[32m+[m[32m    fi[m
[32m+[m[32m    if [ -n "${_OLD_VIRTUAL_PYTHONHOME:-}" ] ; then[m
[32m+[m[32m        PYTHONHOME="${_OLD_VIRTUAL_PYTHONHOME:-}"[m
[32m+[m[32m        export PYTHONHOME[m
[32m+[m[32m        unset _OLD_VIRTUAL_PYTHONHOME[m
[32m+[m[32m    fi[m
[32m+[m
[32m+[m[32m    # Call hash to forget past commands. Without forgetting[m
[32m+[m[32m    # past commands the $PATH changes we made may not be respected[m
[32m+[m[32m    hash -r 2> /dev/null[m
[32m+[m
[32m+[m[32m    if [ -n "${_OLD_VIRTUAL_PS1:-}" ] ; then[m
[32m+[m[32m        PS1="${_OLD_VIRTUAL_PS1:-}"[m
[32m+[m[32m        export PS1[m
[32m+[m[32m        unset _OLD_VIRTUAL_PS1[m
[32m+[m[32m    fi[m
[32m+[m
[32m+[m[32m    unset VIRTUAL_ENV[m
[32m+[m[32m    unset VIRTUAL_ENV_PROMPT[m
[32m+[m[32m    if [ ! "${1:-}" = "nondestructive" ] ; then[m
[32m+[m[32m    # Self destruct![m
[32m+[m[32m        unset -f deactivate[m
[32m+[m[32m    fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# unset irrelevant variables[m
[32m+[m[32mdeactivate nondestructive[m
[32m+[m
[32m+[m[32m# on Windows, a path can contain colons and backslashes and has to be converted:[m
[32m+[m[32mif [ "${OSTYPE:-}" = "cygwin" ] || [ "${OSTYPE:-}" = "msys" ] ; then[m
[32m+[m[32m    # transform D:\path\to\venv to /d/path/to/venv on MSYS[m
[32m+[m[32m    # and to /cygdrive/d/path/to/venv on Cygwin[m
[32m+[m[32m    export VIRTUAL_ENV=$(cygpath /home/bicco/GIT/sepAI/.venv)[m
[32m+[m[32melse[m
[32m+[m[32m    # use the path as-is[m
[32m+[m[32m    export VIRTUAL_ENV=/home/bicco/GIT/sepAI/.venv[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m_OLD_VIRTUAL_PATH="$PATH"[m
[32m+[m[32mPATH="$VIRTUAL_ENV/"bin":$PATH"[m
[32m+[m[32mexport PATH[m
[32m+[m
[32m+[m[32m# unset PYTHONHOME if set[m
[32m+[m[32m# this will fail if PYTHONHOME is set to the empty string (which is bad anyway)[m
[32m+[m[32m# could use `if (set -u; : $PYTHONHOME) ;` in bash[m
[32m+[m[32mif [ -n "${PYTHONHOME:-}" ] ; then[m
[32m+[m[32m    _OLD_VIRTUAL_PYTHONHOME="${PYTHONHOME:-}"[m
[32m+[m[32m    unset PYTHONHOME[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ -z "${VIRTUAL_ENV_DISABLE_PROMPT:-}" ] ; then[m
[32m+[m[32m    _OLD_VIRTUAL_PS1="${PS1:-}"[m
[32m+[m[32m    PS1='(.venv) '"${PS1:-}"[m
[32m+[m[32m    export PS1[m
[32m+[m[32m    VIRTUAL_ENV_PROMPT='(.venv) '[m
[32m+[m[32m    export VIRTUAL_ENV_PROMPT[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# Call hash to forget past commands. Without forgetting[m
[32m+[m[32m# past commands the $PATH changes we made may not be respected[m
[32m+[m[32mhash -r 2> /dev/null[m
[1mdiff --git a/.venv/bin/activate.csh b/.venv/bin/activate.csh[m
[1mnew file mode 100644[m
[1mindex 0000000..cc09c8f[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/activate.csh[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32m# This file must be used with "source bin/activate.csh" *from csh*.[m
[32m+[m[32m# You cannot run it directly.[m
[32m+[m
[32m+[m[32m# Created by Davide Di Blasi <davidedb@gmail.com>.[m
[32m+[m[32m# Ported to Python 3.3 venv by Andrew Svetlov <andrew.svetlov@gmail.com>[m
[32m+[m
[32m+[m[32malias deactivate 'test $?_OLD_VIRTUAL_PATH != 0 && setenv PATH "$_OLD_VIRTUAL_PATH" && unset _OLD_VIRTUAL_PATH; rehash; test $?_OLD_VIRTUAL_PROMPT != 0 && set prompt="$_OLD_VIRTUAL_PROMPT" && unset _OLD_VIRTUAL_PROMPT; unsetenv VIRTUAL_ENV; unsetenv VIRTUAL_ENV_PROMPT; test "\!:*" != "nondestructive" && unalias deactivate'[m
[32m+[m
[32m+[m[32m# Unset irrelevant variables.[m
[32m+[m[32mdeactivate nondestructive[m
[32m+[m
[32m+[m[32msetenv VIRTUAL_ENV /home/bicco/GIT/sepAI/.venv[m
[32m+[m
[32m+[m[32mset _OLD_VIRTUAL_PATH="$PATH"[m
[32m+[m[32msetenv PATH "$VIRTUAL_ENV/"bin":$PATH"[m
[32m+[m
[32m+[m
[32m+[m[32mset _OLD_VIRTUAL_PROMPT="$prompt"[m
[32m+[m
[32m+[m[32mif (! "$?VIRTUAL_ENV_DISABLE_PROMPT") then[m
[32m+[m[32m    set prompt = '(.venv) '"$prompt"[m
[32m+[m[32m    setenv VIRTUAL_ENV_PROMPT '(.venv) '[m
[32m+[m[32mendif[m
[32m+[m
[32m+[m[32malias pydoc python -m pydoc[m
[32m+[m
[32m+[m[32mrehash[m
[1mdiff --git a/.venv/bin/activate.fish b/.venv/bin/activate.fish[m
[1mnew file mode 100644[m
[1mindex 0000000..2fae689[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/activate.fish[m
[36m@@ -0,0 +1,69 @@[m
[32m+[m[32m# This file must be used with "source <venv>/bin/activate.fish" *from fish*[m
[32m+[m[32m# (https://fishshell.com/). You cannot run it directly.[m
[32m+[m
[32m+[m[32mfunction deactivate  -d "Exit virtual environment and return to normal shell environment"[m
[32m+[m[32m    # reset old environment variables[m
[32m+[m[32m    if test -n "$_OLD_VIRTUAL_PATH"[m
[32m+[m[32m        set -gx PATH $_OLD_VIRTUAL_PATH[m
[32m+[m[32m        set -e _OLD_VIRTUAL_PATH[m
[32m+[m[32m    end[m
[32m+[m[32m    if test -n "$_OLD_VIRTUAL_PYTHONHOME"[m
[32m+[m[32m        set -gx PYTHONHOME $_OLD_VIRTUAL_PYTHONHOME[m
[32m+[m[32m        set -e _OLD_VIRTUAL_PYTHONHOME[m
[32m+[m[32m    end[m
[32m+[m
[32m+[m[32m    if test -n "$_OLD_FISH_PROMPT_OVERRIDE"[m
[32m+[m[32m        set -e _OLD_FISH_PROMPT_OVERRIDE[m
[32m+[m[32m        # prevents error when using nested fish instances (Issue #93858)[m
[32m+[m[32m        if functions -q _old_fish_prompt[m
[32m+[m[32m            functions -e fish_prompt[m
[32m+[m[32m            functions -c _old_fish_prompt fish_prompt[m
[32m+[m[32m            functions -e _old_fish_prompt[m
[32m+[m[32m        end[m
[32m+[m[32m    end[m
[32m+[m
[32m+[m[32m    set -e VIRTUAL_ENV[m
[32m+[m[32m    set -e VIRTUAL_ENV_PROMPT[m
[32m+[m[32m    if test "$argv[1]" != "nondestructive"[m
[32m+[m[32m        # Self-destruct![m
[32m+[m[32m        functions -e deactivate[m
[32m+[m[32m    end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32m# Unset irrelevant variables.[m
[32m+[m[32mdeactivate nondestructive[m
[32m+[m
[32m+[m[32mset -gx VIRTUAL_ENV /home/bicco/GIT/sepAI/.venv[m
[32m+[m
[32m+[m[32mset -gx _OLD_VIRTUAL_PATH $PATH[m
[32m+[m[32mset -gx PATH "$VIRTUAL_ENV/"bin $PATH[m
[32m+[m
[32m+[m[32m# Unset PYTHONHOME if set.[m
[32m+[m[32mif set -q PYTHONHOME[m
[32m+[m[32m    set -gx _OLD_VIRTUAL_PYTHONHOME $PYTHONHOME[m
[32m+[m[32m    set -e PYTHONHOME[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mif test -z "$VIRTUAL_ENV_DISABLE_PROMPT"[m
[32m+[m[32m    # fish uses a function instead of an env var to generate the prompt.[m
[32m+[m
[32m+[m[32m    # Save the current fish_prompt function as the function _old_fish_prompt.[m
[32m+[m[32m    functions -c fish_prompt _old_fish_prompt[m
[32m+[m
[32m+[m[32m    # With the original prompt function renamed, we can override with our own.[m
[32m+[m[32m    function fish_prompt[m
[32m+[m[32m        # Save the return status of the last command.[m
[32m+[m[32m        set -l old_status $status[m
[32m+[m
[32m+[m[32m        # Output the venv prompt; color taken from the blue of the Python logo.[m
[32m+[m[32m        printf "%s%s%s" (set_color 4B8BBE) '(.venv) ' (set_color normal)[m
[32m+[m
[32m+[m[32m        # Restore the return status of the previous command.[m
[32m+[m[32m        echo "exit $old_status" | .[m
[32m+[m[32m        # Output the original/"old" prompt.[m
[32m+[m[32m        _old_fish_prompt[m
[32m+[m[32m    end[m
[32m+[m
[32m+[m[32m    set -gx _OLD_FISH_PROMPT_OVERRIDE "$VIRTUAL_ENV"[m
[32m+[m[32m    set -gx VIRTUAL_ENV_PROMPT '(.venv) '[m
[32m+[m[32mend[m
[1mdiff --git a/.venv/bin/dotenv b/.venv/bin/dotenv[m
[1mnew file mode 100755[m
[1mindex 0000000..eef473f[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/dotenv[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m#!/home/bicco/GIT/sepAI/.venv/bin/python3[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom dotenv.__main__ import cli[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    if sys.argv[0].endswith('.exe'):[m
[32m+[m[32m        sys.argv[0] = sys.argv[0][:-4][m
[32m+[m[32m    sys.exit(cli())[m
[1mdiff --git a/.venv/bin/fastapi b/.venv/bin/fastapi[m
[1mnew file mode 100755[m
[1mindex 0000000..3cf5b8c[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/fastapi[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m#!/home/bicco/GIT/sepAI/.venv/bin/python3[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom fastapi.cli import main[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    if sys.argv[0].endswith('.exe'):[m
[32m+[m[32m        sys.argv[0] = sys.argv[0][:-4][m
[32m+[m[32m    sys.exit(main())[m
[1mdiff --git a/.venv/bin/httpx b/.venv/bin/httpx[m
[1mnew file mode 100755[m
[1mindex 0000000..fbde3ba[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/httpx[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m#!/home/bicco/GIT/sepAI/.venv/bin/python3[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom httpx import main[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    if sys.argv[0].endswith('.exe'):[m
[32m+[m[32m        sys.argv[0] = sys.argv[0][:-4][m
[32m+[m[32m    sys.exit(main())[m
[1mdiff --git a/.venv/bin/pip b/.venv/bin/pip[m
[1mnew file mode 100755[m
[1mindex 0000000..5fd9ef3[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/pip[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m#!/home/bicco/GIT/sepAI/.venv/bin/python3[m
[32m+[m[32m# -*- coding: utf-8 -*-[m
[32m+[m[32mimport re[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom pip._internal.cli.main import main[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    sys.argv[0] = re.sub(r'(-script\.pyw|\.exe)?$', '', sys.argv[0])[m
[32m+[m[32m    sys.exit(main())[m
[1mdiff --git a/.venv/bin/pip3 b/.venv/bin/pip3[m
[1mnew file mode 100755[m
[1mindex 0000000..5fd9ef3[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/pip3[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m#!/home/bicco/GIT/sepAI/.venv/bin/python3[m
[32m+[m[32m# -*- coding: utf-8 -*-[m
[32m+[m[32mimport re[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom pip._internal.cli.main import main[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    sys.argv[0] = re.sub(r'(-script\.pyw|\.exe)?$', '', sys.argv[0])[m
[32m+[m[32m    sys.exit(main())[m
[1mdiff --git a/.venv/bin/pip3.12 b/.venv/bin/pip3.12[m
[1mnew file mode 100755[m
[1mindex 0000000..5fd9ef3[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/pip3.12[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m#!/home/bicco/GIT/sepAI/.venv/bin/python3[m
[32m+[m[32m# -*- coding: utf-8 -*-[m
[32m+[m[32mimport re[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom pip._internal.cli.main import main[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    sys.argv[0] = re.sub(r'(-script\.pyw|\.exe)?$', '', sys.argv[0])[m
[32m+[m[32m    sys.exit(main())[m
[1mdiff --git a/.venv/bin/py.test b/.venv/bin/py.test[m
[1mnew file mode 100755[m
[1mindex 0000000..25cea91[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/py.test[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m#!/home/bicco/GIT/sepAI/.venv/bin/python3[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom pytest import console_main[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    if sys.argv[0].endswith('.exe'):[m
[32m+[m[32m        sys.argv[0] = sys.argv[0][:-4][m
[32m+[m[32m    sys.exit(console_main())[m
[1mdiff --git a/.venv/bin/pygmentize b/.venv/bin/pygmentize[m
[1mnew file mode 100755[m
[1mindex 0000000..34aaa80[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/pygmentize[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m#!/home/bicco/GIT/sepAI/.venv/bin/python3[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom pygments.cmdline import main[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    if sys.argv[0].endswith('.exe'):[m
[32m+[m[32m        sys.argv[0] = sys.argv[0][:-4][m
[32m+[m[32m    sys.exit(main())[m
[1mdiff --git a/.venv/bin/pytest b/.venv/bin/pytest[m
[1mnew file mode 100755[m
[1mindex 0000000..25cea91[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/pytest[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m#!/home/bicco/GIT/sepAI/.venv/bin/python3[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom pytest import console_main[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    if sys.argv[0].endswith('.exe'):[m
[32m+[m[32m        sys.argv[0] = sys.argv[0][:-4][m
[32m+[m[32m    sys.exit(console_main())[m
[1mdiff --git a/.venv/bin/python b/.venv/bin/python[m
[1mnew file mode 120000[m
[1mindex 0000000..b8a0adb[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/python[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mpython3[m
\ No newline at end of file[m
[1mdiff --git a/.venv/bin/python3 b/.venv/bin/python3[m
[1mnew file mode 120000[m
[1mindex 0000000..ae65fda[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/python3[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m/usr/bin/python3[m
\ No newline at end of file[m
[1mdiff --git a/.venv/bin/python3.12 b/.venv/bin/python3.12[m
[1mnew file mode 120000[m
[1mindex 0000000..b8a0adb[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/python3.12[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mpython3[m
\ No newline at end of file[m
[1mdiff --git a/.venv/bin/uvicorn b/.venv/bin/uvicorn[m
[1mnew file mode 100755[m
[1mindex 0000000..e56b199[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/uvicorn[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m#!/home/bicco/GIT/sepAI/.venv/bin/python3[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom uvicorn.main import main[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    if sys.argv[0].endswith('.exe'):[m
[32m+[m[32m        sys.argv[0] = sys.argv[0][:-4][m
[32m+[m[32m    sys.exit(main())[m
[1mdiff --git a/.venv/bin/watchfiles b/.venv/bin/watchfiles[m
[1mnew file mode 100755[m
[1mindex 0000000..67e9e80[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/watchfiles[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m#!/home/bicco/GIT/sepAI/.venv/bin/python3[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom watchfiles.cli import cli[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    if sys.argv[0].endswith('.exe'):[m
[32m+[m[32m        sys.argv[0] = sys.argv[0][:-4][m
[32m+[m[32m    sys.exit(cli())[m
[1mdiff --git a/.venv/bin/websockets b/.venv/bin/websockets[m
[1mnew file mode 100755[m
[1mindex 0000000..49e668d[m
[1m--- /dev/null[m
[1m+++ b/.venv/bin/websockets[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m#!/home/bicco/GIT/sepAI/.venv/bin/python3[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom websockets.cli import main[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    if sys.argv[0].endswith('.exe'):[m
[32m+[m[32m        sys.argv[0] = sys.argv[0][:-4][m
[32m+[m[32m    sys.exit(main())[m
[1mdiff --git a/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/INSTALLER b/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/INSTALLER[m
[1mnew file mode 100644[m
[1mindex 0000000..a1b589e[m
[1m--- /dev/null[m
[1m+++ b/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/INSTALLER[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mpip[m
[1mdiff --git a/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/LICENSE b/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..2f1b8e1[m
[1m--- /dev/null[m
[1m+++ b/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/LICENSE[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mCopyright (c) 2017-2021 Ingy döt Net[m
[32m+[m[32mCopyright (c) 2006-2016 Kirill Simonov[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy of[m
[32m+[m[32mthis software and associated documentation files (the "Software"), to deal in[m
[32m+[m[32mthe Software without restriction, including without limitation the rights to[m
[32m+[m[32muse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies[m
[32m+[m[32mof the Software, and to permit persons to whom the Software is furnished to do[m
[32m+[m[32mso, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in all[m
[32m+[m[32mcopies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32mSOFTWARE.[m
[1mdiff --git a/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/METADATA b/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/METADATA[m
[1mnew file mode 100644[m
[1mindex 0000000..db029b7[m
[1m--- /dev/null[m
[1m+++ b/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/METADATA[m
[36m@@ -0,0 +1,46 @@[m
[32m+[m[32mMetadata-Version: 2.1[m
[32m+[m[32mName: PyYAML[m
[32m+[m[32mVersion: 6.0.2[m
[32m+[m[32mSummary: YAML parser and emitter for Python[m
[32m+[m[32mHome-page: https://pyyaml.org/[m
[32m+[m[32mDownload-URL: https://pypi.org/project/PyYAML/[m
[32m+[m[32mAuthor: Kirill Simonov[m
[32m+[m[32mAuthor-email: xi@resolvent.net[m
[32m+[m[32mLicense: MIT[m
[32m+[m[32mProject-URL: Bug Tracker, https://github.com/yaml/pyyaml/issues[m
[32m+[m[32mProject-URL: CI, https://github.com/yaml/pyyaml/actions[m
[32m+[m[32mProject-URL: Documentation, https://pyyaml.org/wiki/PyYAMLDocumentation[m
[32m+[m[32mProject-URL: Mailing lists, http://lists.sourceforge.net/lists/listinfo/yaml-core[m
[32m+[m[32mProject-URL: Source Code, https://github.com/yaml/pyyaml[m
[32m+[m[32mPlatform: Any[m
[32m+[m[32mClassifier: Development Status :: 5 - Production/Stable[m
[32m+[m[32mClassifier: Intended Audience :: Developers[m
[32m+[m[32mClassifier: License :: OSI Approved :: MIT License[m
[32m+[m[32mClassifier: Operating System :: OS Independent[m
[32m+[m[32mClassifier: Programming Language :: Cython[m
[32m+[m[32mClassifier: Programming Language :: Python[m
[32m+[m[32mClassifier: Programming Language :: Python :: 3[m
[32m+[m[32mClassifier: Programming Language :: Python :: 3.8[m
[32m+[m[32mClassifier: Programming Language :: Python :: 3.9[m
[32m+[m[32mClassifier: Programming Language :: Python :: 3.10[m
[32m+[m[32mClassifier: Programming Language :: Python :: 3.11[m
[32m+[m[32mClassifier: Programming Language :: Python :: 3.12[m
[32m+[m[32mClassifier: Programming Language :: Python :: 3.13[m
[32m+[m[32mClassifier: Programming Language :: Python :: Implementation :: CPython[m
[32m+[m[32mClassifier: Programming Language :: Python :: Implementation :: PyPy[m
[32m+[m[32mClassifier: Topic :: Software Development :: Libraries :: Python Modules[m
[32m+[m[32mClassifier: Topic :: Text Processing :: Markup[m
[32m+[m[32mRequires-Python: >=3.8[m
[32m+[m[32mLicense-File: LICENSE[m
[32m+[m
[32m+[m[32mYAML is a data serialization format designed for human readability[m
[32m+[m[32mand interaction with scripting languages.  PyYAML is a YAML parser[m
[32m+[m[32mand emitter for Python.[m
[32m+[m
[32m+[m[32mPyYAML features a complete YAML 1.1 parser, Unicode support, pickle[m
[32m+[m[32msupport, capable extension API, and sensible error messages.  PyYAML[m
[32m+[m[32msupports standard YAML tags and provides Python-specific tags that[m
[32m+[m[32mallow to represent an arbitrary Python object.[m
[32m+[m
[32m+[m[32mPyYAML is applicable for a broad range of tasks from complex[m
[32m+[m[32mconfiguration files to object serialization and persistence.[m
[1mdiff --git a/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/RECORD b/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/RECORD[m
[1mnew file mode 100644[m
[1mindex 0000000..f596c8e[m
[1m--- /dev/null[m
[1m+++ b/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/RECORD[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32mPyYAML-6.0.2.dist-info/INSTALLER,sha256=zuuue4knoyJ-UwPPXg8fezS7VCrXJQrAP7zeNuwvFQg,4[m[41m[m
[32m+[m[32mPyYAML-6.0.2.dist-info/LICENSE,sha256=jTko-dxEkP1jVwfLiOsmvXZBAqcoKVQwfT5RZ6V36KQ,1101[m[41m[m
[32m+[m[32mPyYAML-6.0.2.dist-info/METADATA,sha256=9-odFB5seu4pGPcEv7E8iyxNF51_uKnaNGjLAhz2lto,2060[m[41m[m
[32m+[m[32mPyYAML-6.0.2.dist-info/RECORD,,[m[41m[m
[32m+[m[32mPyYAML-6.0.2.dist-info/WHEEL,sha256=1pP4yhrbipRtdbm4Rbg3aoTjzc7pDhpHKO0CEY24CNM,152[m[41m[m
[32m+[m[32mPyYAML-6.0.2.dist-info/top_level.txt,sha256=rpj0IVMTisAjh_1vG3Ccf9v5jpCQwAz6cD1IVU5ZdhQ,11[m[41m[m
[32m+[m[32m_yaml/__init__.py,sha256=04Ae_5osxahpJHa3XBZUAf4wi6XX32gR8D6X6p64GEA,1402[m[41m[m
[32m+[m[32m_yaml/__pycache__/__init__.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__init__.py,sha256=N35S01HMesFTe0aRRMWkPj0Pa8IEbHpE9FK7cr5Bdtw,12311[m[41m[m
[32m+[m[32myaml/__pycache__/__init__.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/composer.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/constructor.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/cyaml.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/dumper.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/emitter.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/error.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/events.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/loader.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/nodes.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/parser.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/reader.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/representer.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/resolver.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/scanner.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/serializer.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/__pycache__/tokens.cpython-312.pyc,,[m[41m[m
[32m+[m[32myaml/_yaml.cpython-312-x86_64-linux-gnu.so,sha256=PJFgxnc0f5Dyde6WKmBm6fZWapawmWl7aBRruXjRA80,2481784[m[41m[m
[32m+[m[32myaml/composer.py,sha256=_Ko30Wr6eDWUeUpauUGT3Lcg9QPBnOPVlTnIMRGJ9FM,4883[m[41m[m
[32m+[m[32myaml/constructor.py,sha256=kNgkfaeLUkwQYY_Q6Ff1Tz2XVw_pG1xVE9Ak7z-viLA,28639[m[41m[m
[32m+[m[32myaml/cyaml.py,sha256=6ZrAG9fAYvdVe2FK_w0hmXoG7ZYsoYUwapG8CiC72H0,3851[m[41m[m
[32m+[m[32myaml/dumper.py,sha256=PLctZlYwZLp7XmeUdwRuv4nYOZ2UBnDIUy8-lKfLF-o,2837[m[41m[m
[32m+[m[32myaml/emitter.py,sha256=jghtaU7eFwg31bG0B7RZea_29Adi9CKmXq_QjgQpCkQ,43006[m[41m[m
[32m+[m[32myaml/error.py,sha256=Ah9z-toHJUbE9j-M8YpxgSRM5CgLCcwVzJgLLRF2Fxo,2533[m[41m[m
[32m+[m[32myaml/events.py,sha256=50_TksgQiE4up-lKo_V-nBy-tAIxkIPQxY5qDhKCeHw,2445[m[41m[m
[32m+[m[32myaml/loader.py,sha256=UVa-zIqmkFSCIYq_PgSGm4NSJttHY2Rf_zQ4_b1fHN0,2061[m[41m[m
[32m+[m[32myaml/nodes.py,sha256=gPKNj8pKCdh2d4gr3gIYINnPOaOxGhJAUiYhGRnPE84,1440[m[41m[m
[32m+[m[32myaml/parser.py,sha256=ilWp5vvgoHFGzvOZDItFoGjD6D42nhlZrZyjAwa0oJo,25495[m[41m[m
[32m+[m[32myaml/reader.py,sha256=0dmzirOiDG4Xo41RnuQS7K9rkY3xjHiVasfDMNTqCNw,6794[m[41m[m
[32m+[m[32myaml/representer.py,sha256=IuWP-cAW9sHKEnS0gCqSa894k1Bg4cgTxaDwIcbRQ-Y,14190[m[41m[m
[32m+[m[32myaml/resolver.py,sha256=9L-VYfm4mWHxUD1Vg4X7rjDRK_7VZd6b92wzq7Y2IKY,9004[m[41m[m
[32m+[m[32myaml/scanner.py,sha256=YEM3iLZSaQwXcQRg2l2R4MdT0zGP2F9eHkKGKnHyWQY,51279[m[41m[m
[32m+[m[32myaml/serializer.py,sha256=ChuFgmhU01hj4xgI8GaKv6vfM2Bujwa9i7d2FAHj7cA,4165[m[41m[m
[32m+[m[32myaml/tokens.py,sha256=lTQIzSVw8Mg9wv459-TjiOQe6wVziqaRlqX2_89rp54,2573[m[41m[m
[1mdiff --git a/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/WHEEL b/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/WHEEL[m
[1mnew file mode 100644[m
[1mindex 0000000..56616a8[m
[1m--- /dev/null[m
[1m+++ b/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/WHEEL[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mWheel-Version: 1.0[m
[32m+[m[32mGenerator: bdist_wheel (0.44.0)[m
[32m+[m[32mRoot-Is-Purelib: false[m
[32m+[m[32mTag: cp312-cp312-manylinux_2_17_x86_64[m
[32m+[m[32mTag: cp312-cp312-manylinux2014_x86_64[m
[32m+[m
[1mdiff --git a/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/top_level.txt b/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/top_level.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..e6475e9[m
[1m--- /dev/null[m
[1m+++ b/.venv/lib/python3.12/site-packages/PyYAML-6.0.2.dist-info/top_level.txt[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m_yaml[m
[32m+[m[32myaml[m
[1mdiff --git a/.venv/lib/python3.12/site-packages/__pycache__/py.cpython-312.pyc b/.venv/lib/python3.12/site-packages/__pycache__/py.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..02285f8[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/__pycache__/py.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/__pycache__/typing_extensions.cpython-312.pyc b/.venv/lib/python3.12/site-packages/__pycache__/typing_extensions.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..d26ad4b[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/__pycache__/typing_extensions.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__init__.py b/.venv/lib/python3.12/site-packages/_pytest/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..8eb8ec9[m
[1m--- /dev/null[m
[1m+++ b/.venv/lib/python3.12/site-packages/_pytest/__init__.py[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mfrom __future__ import annotations[m
[32m+[m
[32m+[m
[32m+[m[32m__all__ = ["__version__", "version_tuple"][m
[32m+[m
[32m+[m[32mtry:[m
[32m+[m[32m    from ._version import version as __version__[m
[32m+[m[32m    from ._version import version_tuple[m
[32m+[m[32mexcept ImportError:  # pragma: no cover[m
[32m+[m[32m    # broken installation, we don't even try[m
[32m+[m[32m    # unknown only works because we do poor mans version compare[m
[32m+[m[32m    __version__ = "unknown"[m
[32m+[m[32m    version_tuple = (0, 0, "unknown")[m
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/__init__.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/__init__.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..b8a2954[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/__init__.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/_argcomplete.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/_argcomplete.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..7f7f8be[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/_argcomplete.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/_version.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/_version.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..8101bf6[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/_version.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/cacheprovider.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/cacheprovider.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..edb0c53[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/cacheprovider.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/capture.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/capture.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..78c50ad[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/capture.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/compat.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/compat.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..e342949[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/compat.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/debugging.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/debugging.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..43878f1[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/debugging.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/deprecated.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/deprecated.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..7edac1c[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/deprecated.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/doctest.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/doctest.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..f71cad2[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/doctest.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/faulthandler.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/faulthandler.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..f773463[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/faulthandler.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/fixtures.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/fixtures.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..4e288b7[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/fixtures.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/freeze_support.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/freeze_support.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..85f0b66[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/freeze_support.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/helpconfig.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/helpconfig.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..369c1e3[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/helpconfig.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/hookspec.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/hookspec.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..56d563d[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/hookspec.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/junitxml.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/junitxml.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..e657b96[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/junitxml.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/legacypath.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/legacypath.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..c19dc87[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/legacypath.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/logging.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/logging.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..ea931b2[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/logging.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/main.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/main.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..96b6190[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/main.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/monkeypatch.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/monkeypatch.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..04aff0a[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/monkeypatch.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/nodes.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/nodes.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..fdfd65f[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/nodes.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/outcomes.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/outcomes.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..e63c129[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/outcomes.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/pastebin.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/pastebin.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..d6bf3fc[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/pastebin.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/pathlib.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/pathlib.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..24b01aa[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/pathlib.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/pytester.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/pytester.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..ba0bdfd[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/pytester.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/pytester_assertions.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/pytester_assertions.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..c1ba406[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/pytester_assertions.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/python.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/python.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..8b809fd[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/python.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/python_api.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/python_api.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..1e013ad[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/python_api.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/raises.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/raises.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..d3abfcf[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/raises.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/recwarn.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/recwarn.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..5d50da4[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/recwarn.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/reports.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/reports.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..b212867[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/reports.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/runner.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/runner.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..2b0c70f[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/runner.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/scope.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/scope.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..8a50584[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/scope.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/setuponly.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/setuponly.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..73361c3[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/setuponly.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/setupplan.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/setupplan.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..0a5dc0f[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/setupplan.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/skipping.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/skipping.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..4da1f72[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/skipping.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/stash.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/stash.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..19a8d27[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/stash.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/stepwise.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/stepwise.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..9793d07[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/stepwise.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/terminal.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/terminal.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..2fe82fd[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/terminal.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/threadexception.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/threadexception.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..45ff60f[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/threadexception.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/timing.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/timing.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..814ae7e[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/timing.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/tmpdir.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/tmpdir.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..6bff550[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/tmpdir.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/tracemalloc.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/tracemalloc.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..0ed228c[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/tracemalloc.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/unittest.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/unittest.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..0597ec8[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/unittest.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/unraisableexception.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/unraisableexception.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..46039f0[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/unraisableexception.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/warning_types.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/warning_types.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..013e6d3[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/warning_types.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/__pycache__/warnings.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/warnings.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..e45c837[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/__pycache__/warnings.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/_argcomplete.py b/.venv/lib/python3.12/site-packages/_pytest/_argcomplete.py[m
[1mnew file mode 100644[m
[1mindex 0000000..59426ef[m
[1m--- /dev/null[m
[1m+++ b/.venv/lib/python3.12/site-packages/_pytest/_argcomplete.py[m
[36m@@ -0,0 +1,117 @@[m
[32m+[m[32m"""Allow bash-completion for argparse with argcomplete if installed.[m
[32m+[m
[32m+[m[32mNeeds argcomplete>=0.5.6 for python 3.2/3.3 (older versions fail[m
[32m+[m[32mto find the magic string, so _ARGCOMPLETE env. var is never set, and[m
[32m+[m[32mthis does not need special code).[m
[32m+[m
[32m+[m[32mFunction try_argcomplete(parser) should be called directly before[m
[32m+[m[32mthe call to ArgumentParser.parse_args().[m
[32m+[m
[32m+[m[32mThe filescompleter is what you normally would use on the positional[m
[32m+[m[32marguments specification, in order to get "dirname/" after "dirn<TAB>"[m
[32m+[m[32minstead of the default "dirname ":[m
[32m+[m
[32m+[m[32m   optparser.add_argument(Config._file_or_dir, nargs='*').completer=filescompleter[m
[32m+[m
[32m+[m[32mOther, application specific, completers should go in the file[m
[32m+[m[32mdoing the add_argument calls as they need to be specified as .completer[m
[32m+[m[32mattributes as well. (If argcomplete is not installed, the function the[m
[32m+[m[32mattribute points to will not be used).[m
[32m+[m
[32m+[m[32mSPEEDUP[m
[32m+[m[32m=======[m
[32m+[m
[32m+[m[32mThe generic argcomplete script for bash-completion[m
[32m+[m[32m(/etc/bash_completion.d/python-argcomplete.sh)[m
[32m+[m[32muses a python program to determine startup script generated by pip.[m
[32m+[m[32mYou can speed up completion somewhat by changing this script to include[m
[32m+[m[32m  # PYTHON_ARGCOMPLETE_OK[m
[32m+[m[32mso the python-argcomplete-check-easy-install-script does not[m
[32m+[m[32mneed to be called to find the entry point of the code and see if that is[m
[32m+[m[32mmarked  with PYTHON_ARGCOMPLETE_OK.[m
[32m+[m
[32m+[m[32mINSTALL/DEBUGGING[m
[32m+[m[32m=================[m
[32m+[m
[32m+[m[32mTo include this support in another application that has setup.py generated[m
[32m+[m[32mscripts:[m
[32m+[m
[32m+[m[32m- Add the line:[m
[32m+[m[32m    # PYTHON_ARGCOMPLETE_OK[m
[32m+[m[32m  near the top of the main python entry point.[m
[32m+[m
[32m+[m[32m- Include in the file calling parse_args():[m
[32m+[m[32m    from _argcomplete import try_argcomplete, filescompleter[m
[32m+[m[32m  Call try_argcomplete just before parse_args(), and optionally add[m
[32m+[m[32m  filescompleter to the positional arguments' add_argument().[m
[32m+[m
[32m+[m[32mIf things do not work right away:[m
[32m+[m
[32m+[m[32m- Switch on argcomplete debugging with (also helpful when doing custom[m
[32m+[m[32m  completers):[m
[32m+[m[32m    export _ARC_DEBUG=1[m
[32m+[m
[32m+[m[32m- Run:[m
[32m+[m[32m    python-argcomplete-check-easy-install-script $(which appname)[m
[32m+[m[32m    echo $?[m
[32m+[m[32m  will echo 0 if the magic line has been found, 1 if not.[m
[32m+[m
[32m+[m[32m- Sometimes it helps to find early on errors using:[m
[32m+[m[32m    _ARGCOMPLETE=1 _ARC_DEBUG=1 appname[m
[32m+[m[32m  which should throw a KeyError: 'COMPLINE' (which is properly set by the[m
[32m+[m[32m  global argcomplete script).[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mfrom __future__ import annotations[m
[32m+[m
[32m+[m[32mimport argparse[m
[32m+[m[32mfrom glob import glob[m
[32m+[m[32mimport os[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom typing import Any[m
[32m+[m
[32m+[m
[32m+[m[32mclass FastFilesCompleter:[m
[32m+[m[32m    """Fast file completer class."""[m
[32m+[m
[32m+[m[32m    def __init__(self, directories: bool = True) -> None:[m
[32m+[m[32m        self.directories = directories[m
[32m+[m
[32m+[m[32m    def __call__(self, prefix: str, **kwargs: Any) -> list[str]:[m
[32m+[m[32m        # Only called on non option completions.[m
[32m+[m[32m        if os.sep in prefix[1:]:[m
[32m+[m[32m            prefix_dir = len(os.path.dirname(prefix) + os.sep)[m
[32m+[m[32m        else:[m
[32m+[m[32m            prefix_dir = 0[m
[32m+[m[32m        completion = [][m
[32m+[m[32m        globbed = [][m
[32m+[m[32m        if "*" not in prefix and "?" not in prefix:[m
[32m+[m[32m            # We are on unix, otherwise no bash.[m
[32m+[m[32m            if not prefix or prefix[-1] == os.sep:[m
[32m+[m[32m                globbed.extend(glob(prefix + ".*"))[m
[32m+[m[32m            prefix += "*"[m
[32m+[m[32m        globbed.extend(glob(prefix))[m
[32m+[m[32m        for x in sorted(globbed):[m
[32m+[m[32m            if os.path.isdir(x):[m
[32m+[m[32m                x += "/"[m
[32m+[m[32m            # Append stripping the prefix (like bash, not like compgen).[m
[32m+[m[32m            completion.append(x[prefix_dir:])[m
[32m+[m[32m        return completion[m
[32m+[m
[32m+[m
[32m+[m[32mif os.environ.get("_ARGCOMPLETE"):[m
[32m+[m[32m    try:[m
[32m+[m[32m        import argcomplete.completers[m
[32m+[m[32m    except ImportError:[m
[32m+[m[32m        sys.exit(-1)[m
[32m+[m[32m    filescompleter: FastFilesCompleter | None = FastFilesCompleter()[m
[32m+[m
[32m+[m[32m    def try_argcomplete(parser: argparse.ArgumentParser) -> None:[m
[32m+[m[32m        argcomplete.autocomplete(parser, always_complete_options=False)[m
[32m+[m
[32m+[m[32melse:[m
[32m+[m
[32m+[m[32m    def try_argcomplete(parser: argparse.ArgumentParser) -> None:[m
[32m+[m[32m        pass[m
[32m+[m
[32m+[m[32m    filescompleter = None[m
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/_code/__init__.py b/.venv/lib/python3.12/site-packages/_pytest/_code/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7f67a2e[m
[1m--- /dev/null[m
[1m+++ b/.venv/lib/python3.12/site-packages/_pytest/_code/__init__.py[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32m"""Python inspection/code generation API."""[m
[32m+[m
[32m+[m[32mfrom __future__ import annotations[m
[32m+[m
[32m+[m[32mfrom .code import Code[m
[32m+[m[32mfrom .code import ExceptionInfo[m
[32m+[m[32mfrom .code import filter_traceback[m
[32m+[m[32mfrom .code import Frame[m
[32m+[m[32mfrom .code import getfslineno[m
[32m+[m[32mfrom .code import Traceback[m
[32m+[m[32mfrom .code import TracebackEntry[m
[32m+[m[32mfrom .source import getrawcode[m
[32m+[m[32mfrom .source import Source[m
[32m+[m
[32m+[m
[32m+[m[32m__all__ = [[m
[32m+[m[32m    "Code",[m
[32m+[m[32m    "ExceptionInfo",[m
[32m+[m[32m    "Frame",[m
[32m+[m[32m    "Source",[m
[32m+[m[32m    "Traceback",[m
[32m+[m[32m    "TracebackEntry",[m
[32m+[m[32m    "filter_traceback",[m
[32m+[m[32m    "getfslineno",[m
[32m+[m[32m    "getrawcode",[m
[32m+[m[32m][m
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/_code/__pycache__/__init__.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/_code/__pycache__/__init__.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..160ca4a[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/_code/__pycache__/__init__.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/_code/__pycache__/code.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/_code/__pycache__/code.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..cafb6a9[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/_code/__pycache__/code.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/_code/__pycache__/source.cpython-312.pyc b/.venv/lib/python3.12/site-packages/_pytest/_code/__pycache__/source.cpython-312.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..ba12121[m
Binary files /dev/null and b/.venv/lib/python3.12/site-packages/_pytest/_code/__pycache__/source.cpython-312.pyc differ
[1mdiff --git a/.venv/lib/python3.12/site-packages/_pytest/_code/code.py b/.venv/lib/python3.12/site-packages/_pytest/_code/code.py[m
[1mnew file mode 100644[m
[1mindex 0000000..f1241f1[m
[1m--- /dev/null[m
[1m+++ b/.venv/lib/python3.12/site-packages/_pytest/_code/code.py[m
[36m@@ -0,0 +1,1567 @@[m
[32m+[m[32m# mypy: allow-untyped-defs[m
[32m+[m[32mfrom __future__ import annotations[m
[32m+[m
[32m+[m[32mimport ast[m
[32m+[m[32mfrom collections.abc import Callable[m
[32m+[m[32mfrom collections.abc import Iterable[m
[32m+[m[32mfrom collections.abc import Mapping[m
[32m+[m[32mfrom collections.abc import Sequence[m
[32m+[m[32mimport dataclasses[m
[32m+[m[32mimport inspect[m
[32m+[m[32mfrom inspect import CO_VARARGS[m
[32m+[m[32mfrom inspect import CO_VARKEYWORDS[m
[32m+[m[32mfrom io import StringIO[m
[32m+[m[32mimport os[m
[32m+[m[32mfrom pathlib import Path[m
[32m+[m[32mimport re[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom traceback import extract_tb[m
[32m+[m[32mfrom traceback import format_exception[m
[32m+[m[32mfrom traceback import format_exception_only[m
[32m+[m[32mfrom traceback import FrameSummary[m
[32m+[m[32mfrom types import CodeType[m
[32m+[m[32mfrom types import FrameType[m
[32m+[m[32mfrom types import TracebackType[m
[32m+[m[32mfrom typing import Any[m
[32m+[m[32mfrom typing import ClassVar[m
[32m+[m[32mfrom typing import Final[m
[32m+[m[32mfrom typing import final[m
[32m+[m[32mfrom typing import Generic[m
[32m+[m[32mfrom typing import Literal[m
[32m+[m[32mfrom typing import overload[m
[32m+[m[32mfrom typing import SupportsIndex[m
[32m+[m[32mfrom typing import TYPE_CHECKING[m
[32m+[m[32mfrom typing import TypeVar[m
[32m+[m[32mfrom typing import Union[m
[32m+[m
[32m+[m[32mimport pluggy[m
[32m+[m
[32m+[m[32mimport _pytest[m
[32m+[m[32mfrom _pytest._code.source import findsource[m
[32m+[m[32mfrom _pytest._code.source import getrawcode[m
[32m+[m[32mfrom _pytest._code.source import getstatementrange_ast[m
[32m+[m[32mfrom _pytest._code.source import Source[m
[32m+[m[32mfrom _pytest._io import TerminalWriter[m
[32m+[m[32mfrom _pytest._io.saferepr import safeformat[m
[32m+[m[32mfrom _pytest._io.saferepr import s